ifelse(diff_logcopies_week <= 0, 1, 0)),
comparison = ifelse(gold_standard == 1 & test == 1, "TP",
ifelse(gold_standard == 1 & test == 0, "FP",
ifelse(gold_standard == 0 & test == 1, "FN",
ifelse(gold_standard == 0 & test == 0, "TN", NA)))))
View(wastedata_mod)
wastedata_mod[49:54,]
View( wastedata_mod[49:54,])
View( wastedata_mod[49:58,])
comparisondata <- wastedata_mod %>%
group_by(Province, District, NICDPlant) %>%
select(gold_standard, test, comparison)
View(comparisondata)
#goldstand_vs_test
sensetivity_data <- comparisondata %>%
drop_na(comparison) %>%
group_by(Province, District, NICDPlant, comparison) %>%
summarise(counts= n())
sensetivity_data
sense_spe_calulations <- sensetivity_data %>%
group_by(Province, District, NICDPlant, comparison) %>%
pivot_wider(names_from = comparison, values_from = counts) %>%
mutate(sensitivity  = PP/(PP + PN),
specificity = NN/(NN + NP),
specificity_compl  = 1 - specificity)
sense_spe_calulations <- sensetivity_data %>%
group_by(Province, District, NICDPlant, comparison) %>%
pivot_wider(names_from = comparison, values_from = counts) %>%
mutate(sensitivity  = TP/(TP + FP),
specificity = TN/(FN + TN),
specificity_compl  = 1 - specificity)
sense_spe_calulations <- sensetivity_data %>%
group_by(Province, District, NICDPlant, comparison) %>%
pivot_wider(names_from = comparison, values_from = counts) %>%
mutate(sensitivity  = TP/(TP + FN),
specificity = TN/(FP + TN),
specificity_compl  = 1 - specificity)
View(sense_spe_calulations)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F, method = lm)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
# waste sewershed
# reproduce what  chinwe currently has
rm(list = ls())
library(readxl);library(dplyr)
library(tidyverse);library(stringr)
library(ROCR); library(pROC) # roc
wastedata <- readxl::read_excel("/home/laurette/Desktop/Github/wastewater/Data to support modelling analyses_20220127.xlsx", "Datapairs_allplants_C")
# prep the data
wastedata_mod <- wastedata %>%
rename_all(~str_replace_all(.x, " ", '')) %>%
rename_with(~gsub("[[:punct:]]", "", .x)) %>%
group_by(Province, District, NICDPlant) %>%
mutate(diff_per_week = Cases - lag(Cases, n = 1),
diff_three_week = Cases - lag(Cases, n = 3),
diff_logcopies_week = LoggenecopiesmL - lag(LoggenecopiesmL),
gold_standard = ifelse(diff_three_week >=0, 1, 0),
test  = ifelse(is.na(diff_logcopies_week),NA,
ifelse(diff_logcopies_week >= 0, 1, 0)),
comparison = ifelse(gold_standard == 1 & test == 1, "TP",
ifelse(gold_standard == 1 & test == 0, "FN",
ifelse(gold_standard == 0 & test == 1, "FP",
ifelse(gold_standard == 0 & test == 0, "TN", NA)))))
comparisondata <- wastedata_mod %>%
group_by(Province, District, NICDPlant) %>%
select(gold_standard, test, comparison)
#goldstand_vs_test
sensetivity_data <- comparisondata %>%
drop_na(comparison) %>%
group_by(Province, District, NICDPlant, comparison) %>%
summarise(counts= n())
sense_spe_calulations <- sensetivity_data %>%
group_by(Province, District, NICDPlant, comparison) %>%
pivot_wider(names_from = comparison, values_from = counts) %>%
mutate(sensitivity  = TP/(TP + FN),
specificity = TN/(FP + TN),
specificity_compl  = 1 - specificity)
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
# waste sewershed
# reproduce what  chinwe currently has
rm(list = ls())
library(readxl);library(dplyr)
library(tidyverse);library(stringr)
library(ROCR); library(pROC) # roc
wastedata <- readxl::read_excel("/home/laurette/Desktop/Github/wastewater/Data to support modelling analyses_20220127.xlsx", "Datapairs_allplants_C")
# prep the data
wastedata_mod <- wastedata %>%
rename_all(~str_replace_all(.x, " ", '')) %>%
rename_with(~gsub("[[:punct:]]", "", .x)) %>%
group_by(Province, District, NICDPlant) %>%
mutate(diff_per_week = Cases - lag(Cases, n = 1),
diff_three_week = Cases - lag(Cases, n = 3),
diff_logcopies_week = LoggenecopiesmL - lag(LoggenecopiesmL),
gold_standard = ifelse(diff_three_week >=0, 1, 0),
test  = ifelse(is.na(diff_logcopies_week),NA,
ifelse(diff_logcopies_week >= 0, 1, 0)),
comparison = ifelse(gold_standard == 1 & test == 1, "TP",
ifelse(gold_standard == 1 & test == 0, "FN",
ifelse(gold_standard == 0 & test == 1, "FP",
ifelse(gold_standard == 0 & test == 0, "TN", NA)))))
comparisondata <- wastedata_mod %>%
group_by(Province, District, NICDPlant) %>%
select(gold_standard, test, comparison)
#goldstand_vs_test
sensetivity_data <- comparisondata %>%
drop_na(comparison) %>%
group_by(Province, District, NICDPlant, comparison) %>%
summarise(counts= n())
sense_spe_calulations <- sensetivity_data %>%
group_by(Province, District, NICDPlant, comparison) %>%
pivot_wider(names_from = comparison, values_from = counts) %>%
mutate(sensitivity  = TP/(TP + FN),
specificity = TN/(FP + TN),
specificity_compl  = 1 - specificity)
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
source('~/Desktop/Github/wastewater/roc_curves_analysis.R')
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
sense_spe_calulations
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
View(sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)))
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
sense_spe_calulations
auc =
# y = lm(sense_spe_calulations$sensitivity~ 1+ sense_spe_calulations$specificity_compl)
# rocr_perf_test <- performance(0.4923 +0.3744 *(sense_spe_calulations$specificity_compl),
#                               sense_spe_calulations$sensitivity,
#                               sense_spe_calulations$specificity_compl)
sense_spe_calulations %>%
ggplot()+
geom_point(aes(y = sensitivity, x = specificity_compl))+
geom_smooth(aes(y = sensitivity, x = specificity_compl), se = F, method = lm)+
theme_bw(base_size = 22, base_family = "") +
labs(x = "1 - specifity", y = "sensitivity", color = "")+
theme(axis.text.x = element_text())+
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))+
scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2))
#######################################
#Question ONE
#######################################
rm(list = ls())
library(dplyr);library(tidyverse);library(ggplot2)
labdata <- read.delim("/home/laurette/Desktop/Github/CompetencyAssessment/lab_data.txt", header = T,
sep = "\t", dec = ".") %>%
mutate(sex = ifelse(sex == "Female", "F",
ifelse(sex == "Male", "M", ifelse(sex == "F", "F", "M"))))
dim(labdata)
length(unique(labdata$patient_id))
names(labdata)
meddata <- read.csv("/home/laurette/Desktop/Github/CompetencyAssessment/medicine_data.csv", header = T,
sep = ",")
dim(meddata)
distinct(meddata)
length(unique(meddata$patient_id))
names(meddata)
newdata <- merge(meddata, labdata, all  = TRUE)
# create the four subgroups based on the medication
medicationtakers <- newdata %>%
group_by(patient_id, sex, date_of_birth) %>%
distinct(patient_id, sex, date_of_birth, medication_name) %>%
mutate(count = n(),
category = ifelse(medication_name == "metformin"& count ==1, "metformin",
ifelse(medication_name == "insulin"& count ==1, "insulin",
ifelse(is.na(medication_name), "no med", "both")))) %>%
distinct(patient_id, sex, date_of_birth, category)
medicationtakers
#Medication summary
summarydata <- merge(newdata, medicationtakers) %>%
group_by(category)  %>%
summarise( patients = length(unique(patient_id)),
average = mean(lab_test_result),
standard_error = sd(lab_test_result),
median_value = median(lab_test_result),
min_value =  min(lab_test_result),
max_value =  max(lab_test_result),
l_quartile =  quantile(lab_test_result)[2],
u_quartile =  quantile(lab_test_result)[4])
summarydata
# Create desired extra columns
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result) %>%
mutate(age = as.numeric(as.Date( Sys.time()) - as.Date( date_of_birth))/365.25,
age_category = ifelse(age<30, "<30",
ifelse(age <40, "30 - 39",
ifelse(age<50, "40-49",
ifelse(age<60, "50-59",
ifelse(age>60, ">60", NA))))))%>%
merge(medicationtakers, all = TRUE)%>%
group_by(patient_id) %>%
mutate(last_dispensing_date = max(as.Date(dispensing_date)),
number_oftimes_med_dispensed = length(dispensing_date),
medical_cateory = ifelse(category == "both", "insulin AND metformin",
ifelse(category == "insulin", "insulin only"
, ifelse(category == "metformin",  "metformin",
"no drugs dispensed"))))%>%
merge(datesdata, by="patient_id",all=TRUE) %>%
mutate(HbA1c_test_date = lab_test_date,
HbA1c_test_result = lab_test_result,
treat_follow_up = ifelse(HbA1c_test_result >=8, 1, 0))
#Medication summary
summarydata <- merge(newdata, medicationtakers) %>%
group_by(category)  %>%
summarise( patients = length(unique(patient_id)),
average = mean(lab_test_result),
standard_error = sd(lab_test_result),
median_value = median(lab_test_result),
min_value =  min(lab_test_result),
max_value =  max(lab_test_result),
l_quartile =  quantile(lab_test_result)[2],
u_quartile =  quantile(lab_test_result)[4])
# Create desired extra columns
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result) %>%
mutate(age = as.numeric(as.Date( Sys.time()) - as.Date( date_of_birth))/365.25,
age_category = ifelse(age<30, "<30",
ifelse(age <40, "30 - 39",
ifelse(age<50, "40-49",
ifelse(age<60, "50-59",
ifelse(age>60, ">60", NA))))))%>%
merge(medicationtakers, all = TRUE)%>%
group_by(patient_id) %>%
mutate(last_dispensing_date = max(as.Date(dispensing_date)),
number_oftimes_med_dispensed = length(dispensing_date),
medical_cateory = ifelse(category == "both", "insulin AND metformin",
ifelse(category == "insulin", "insulin only"
, ifelse(category == "metformin",  "metformin",
"no drugs dispensed"))))%>%
merge(datesdata, by="patient_id",all=TRUE) %>%
mutate(HbA1c_test_date = lab_test_date,
HbA1c_test_result = lab_test_result,
treat_follow_up = ifelse(HbA1c_test_result >=8, 1, 0))
merge(medicationtakers, all = TRUE)%>%
group_by(patient_id) %>%
mutate(last_dispensing_date = max(as.Date(dispensing_date)),
number_oftimes_med_dispensed = length(dispensing_date),
medical_cateory = ifelse(category == "both", "insulin AND metformin",
ifelse(category == "insulin", "insulin only"
, ifelse(category == "metformin",  "metformin",
"no drugs dispensed"))))%>%
merge(datesdata, by="patient_id",all=TRUE)
newdata
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result)
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result) %>%
mutate(age = as.numeric(as.Date( Sys.time()) - as.Date( date_of_birth))/365.25,
age_category = ifelse(age<30, "<30",
ifelse(age <40, "30 - 39",
ifelse(age<50, "40-49",
ifelse(age<60, "50-59",
ifelse(age>60, ">60", NA))))))
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result) %>%
mutate(age = as.numeric(as.Date( Sys.time()) - as.Date( date_of_birth))/365.25,
age_category = ifelse(age<30, "<30",
ifelse(age <40, "30 - 39",
ifelse(age<50, "40-49",
ifelse(age<60, "50-59",
ifelse(age>60, ">60", NA))))))%>%
merge(medicationtakers, all = TRUE)
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result) %>%
mutate(age = as.numeric(as.Date( Sys.time()) - as.Date( date_of_birth))/365.25,
age_category = ifelse(age<30, "<30",
ifelse(age <40, "30 - 39",
ifelse(age<50, "40-49",
ifelse(age<60, "50-59",
ifelse(age>60, ">60", NA))))))%>%
merge(medicationtakers, all = TRUE)%>%
group_by(patient_id)
long_data <- newdata %>%
dplyr::select(patient_id, sex, date_of_birth, dispensing_date, lab_test_type,
lab_test_date,   lab_test_result) %>%
mutate(age = as.numeric(as.Date( Sys.time()) - as.Date( date_of_birth))/365.25,
age_category = ifelse(age<30, "<30",
ifelse(age <40, "30 - 39",
ifelse(age<50, "40-49",
ifelse(age<60, "50-59",
ifelse(age>60, ">60", NA))))))%>%
merge(medicationtakers, all = TRUE)%>%
group_by(patient_id) %>%
mutate(last_dispensing_date = max(as.Date(dispensing_date)),
number_oftimes_med_dispensed = length(dispensing_date),
medical_cateory = ifelse(category == "both", "insulin AND metformin",
ifelse(category == "insulin", "insulin only"
, ifelse(category == "metformin",  "metformin",
"no drugs dispensed"))))
num_sims
#parameter_bpmodels
n = 1;si_mean = 4.7;si_sd = 2.9
ni_mean = 2; ni_disp = 0.38; num_sims = 1
# data
covid19za_timeline_confirmed <- read.csv("https://raw.githubusercontent.com/dsfsi/covid19za/master/data/covid19za_timeline_confirmed.csv")
covid19za_24firstcase<- covid19za_timeline_confirmed[1:24, -1] %>%
mutate(date = as.Date(date))
# Utility functions
#serial intervals  - lognormal
serial_interval <- function(n = n){
return(rlnorm(n = n, mean = si_mean,
sd = si_sd))
}
# offspring - ntvebinom
offsprings <- function(n){
return(rnbinom(n = n, size = ni_disp,
ni_, mu =  ni_mean))
}
rm(list = ls())
setwd("/home/laurette/Desktop/Github/smarts/covid20200215")
suppressPackageStartupMessages({
require(RCurl)
require(data.table)
require(lubridate)
require(bpmodels)
require(tidyverse)
})
#
#model parametes
source("covid_smarts_params.R")
covid19za_24firstcase<- covid19za_timeline_confirmed[1:24, -1] %>%
mutate(date = as.Date(date))
# Utility functions
#serial intervals  - lognormal
serial_interval <- function(n = n){
return(rlnorm(n = n, mean = si_mean,
sd = si_sd))
}
# offspring - ntvebinom
offsprings <- function(n){
return(rnbinom(n = n, size = ni_disp,
ni_, mu =  ni_mean))
}
#define how t0 relates to the calender dates
min_date <- min(dmy(covid19za_24firstcase$date))
min_date
t0 <- as.integer(dmy(covid19za_24firstcase$date) - min_date)
t0
num_sims
ni_mean
?rlnorm
#chains
branches <- rbindlist(lapply(seq_along(1:num_sims), function(x)
chain_sim(n = length(t0), offspring = "nbinom", stat = "length",
serial = serial_interval, size = ni_disp,
mu = ni_mean,tree = T, t0 = t0, tf  = tf)
))
branches
?chain_sim
tf
