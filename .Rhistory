Y = 0
}
# if (t=30){
#   Y=0.01*Y
# }
# else{
#  Y=Y
# }
R = R + Y
S = data[t,1] - X
if (t ==30){
I= 0.2*(N - S - R)
}
else{
I = N - S - R
}
data[t,] = c(t, X, S, I, R)
}
return(data)
}
TF = 300
b = 0.5
g = 0.25
S = 10000
I = 10
R = 0
a = SIR(S, I, R, b, g, TF)
t = 1
t = 2
N = S + I + R
R0 = b/g
data = matrix(nrow=TF, ncol=5)
data
X = rpois(1, (b*data[t,1]*data[t,3]/N))
data[t,1]
TF = 300
b = 0.5
g = 0.25
S = 10000
I = 10
R = 0
N = S + I + R
R0 = b/g
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, I, S, I, R) # first I is your initial X
data
if(data[t,3] > 0 & data[t,4] > 0){
X = rpois(1, (b*data[t,3]*data[t,4]/N))
X = min(X, data[t,3])
}else{
X = 0
}
data[t,3] > 0 & data[t,4] > 0
if(data[t -1,3] > 0 & data[t -1,4] > 0){
X = rpois(1, (b*data[t - 1,3]*data[t -1,4]/N))
X = min(X, data[t -1,3])
}else{
X = 0
}
X
SIR = function(S, I, R, b, g, TF){
N = S + I + R
R0 = b/g
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, I, S, I, R) # first I is your initial X
for(t in 2:TF){
if(data[t -1,3] > 0 & data[t -1,4] > 0){
X = rpois(1, (b*data[t - 1,3]*data[t -1,4]/N))
X = min(X, data[t -1,3])
}else{
X = 0
}
if(I > 0){
Y = rpois(1, g*data[t -1,4])
Y = min(Y, data[t - 1,3])
}else{
Y = 0
}
R = R + Y
S = data[t - 1,1] - X
if (t ==30){
I= 0.2*(N - S - R)
}
else{
I = N - S - R
}
data[t,] = c(t, X, S, I, R)
}
return(data)
}
TF = 300
b = 0.5
g = 0.25
S = 10000
I = 10
R = 0
a = SIR(S, I, R, b, g, TF)
View(a)
source('~/Desktop/covid20200215/two_week_projections_covid19.R')
source('~/Desktop/Github/smarts/covid20200215/covid_smarts_params.R')
source('~/Desktop/covid20200215/two_week_projections_covid19.R')
source('~/Desktop/Github/smarts/covid20200215/covid_smarts_params.R')
source('~/Desktop/covid20200215/two_week_projections_covid19.R')
median_daily_case
source('/tmp/MT.R')
rm(list = ls())
SIR = function(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF){
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, E, L, P, A)
for(t in 2:TF){
if(E > 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E == 0
}
if(L > 0){
Y1 = rpois(1, (d_E*E))
Y2 =  rpois(1, d_L*0.5*L)
Y3 =  rpois(1, m_L*L)
Y = Y1 - Y2 - Y3
Y = min(Y, L)
}else{
L == 0
}
if(P > 0){
V1 = rpois(1, 0.5*L)
V2 = rpois(1, d_P*P)
V3 = rpois(1, m_P*P)
V  =  V1 - V2 -V3
V = min(V, P)
}else{
P = 0
}
if(A > 0){
Z1 = rpois(1, d_P*P)
Z2 = rpois(1, d_A*A)
Z3 = rpois(1, m_A*A)
Z = Z1 - Z2 - Z3
Z = min(Z, A)
}else{
A == 0
}
E = E + X
L = L + Y
P = P + V
A = A + Z
data[t,] = c(t, E, L, P, A)
}
return(data)
}
TF=400
E=10000
L=5000
P=100
A=5000
n_E=63
d_E=1/8
m_E=1/20
K_L=50000
d_L=1/7
m_L=1/20
d_P=1/6
m_P=1/20
m_A=1/20
Chi_V=0.85
d_A=1/7
k=2
omega_V=2.5
omegah=1/3
gamma=1/4
Chi_H=0.6
a = SIR(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF)
rm(list = ls())
SIR = function(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF){
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, E, L, P, A)
for(t in 2:TF){
if(E > 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E == 0
}
if(L > 0){
Y1 = rpois(1, (d_E*E))
Y2 =  rpois(1, d_L*0.5*L)
Y3 =  rpois(1, m_L*L)
Y = Y1 - Y2 - Y3
Y = min(Y, L)
}else{
L == 0
}
if(P > 0){
V1 = rpois(1, 0.5*L)
V2 = rpois(1, d_P*P)
V3 = rpois(1, m_P*P)
V  =  V1 - V2 -V3
V = min(V, P)
}else{
P == 0
}
if(A > 0){
Z1 = rpois(1, d_P*P)
Z2 = rpois(1, d_A*A)
Z3 = rpois(1, m_A*A)
Z = Z1 - Z2 - Z3
Z = min(Z, A)
}else{
A == 0
}
E = E + X
L = L + Y
P = P + V
A = A + Z
data[t,] = c(t, E, L, P, A)
}
return(data)
}
TF=400
E=10000
L=5000
P=100
A=5000
n_E=63
d_E=1/8
m_E=1/20
K_L=50000
d_L=1/7
m_L=1/20
d_P=1/6
m_P=1/20
m_A=1/20
Chi_V=0.85
d_A=1/7
k=2
omega_V=2.5
omegah=1/3
gamma=1/4
Chi_H=0.6
a = SIR(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF)
E > 0
if(E > 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E == 0
}
E
if(L > 0){
Y1 = rpois(1, (d_E*E))
Y2 =  rpois(1, d_L*0.5*L)
Y3 =  rpois(1, m_L*L)
Y = Y1 - Y2 - Y3
Y = min(Y, L)
}else{
L = 0
}
if(P > 0){
V1 = rpois(1, 0.5*L)
V2 = rpois(1, d_P*P)
V3 = rpois(1, m_P*P)
V  =  V1 - V2 -V3
V = min(V, P)
}else{
P = 0
}
if(A > 0){
Z1 = rpois(1, d_P*P)
Z2 = rpois(1, d_A*A)
Z3 = rpois(1, m_A*A)
Z = Z1 - Z2 - Z3
Z = min(Z, A)
}else{
A = 0
}
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, E, L, P, A)
for(t in 2:TF){
if(E > 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E == 0
}
if(L > 0){
Y1 = rpois(1, (d_E*E))
Y2 =  rpois(1, d_L*0.5*L)
Y3 =  rpois(1, m_L*L)
Y = Y1 - Y2 - Y3
Y = min(Y, L)
}else{
L = 0
}
if(P > 0){
V1 = rpois(1, 0.5*L)
V2 = rpois(1, d_P*P)
V3 = rpois(1, m_P*P)
V  =  V1 - V2 -V3
V = min(V, P)
}else{
P = 0
}
if(A > 0){
Z1 = rpois(1, d_P*P)
Z2 = rpois(1, d_A*A)
Z3 = rpois(1, m_A*A)
Z = Z1 - Z2 - Z3
Z = min(Z, A)
}else{
A = 0
}
E = E + X
L = L + Y
P = P + V
A = A + Z
data[t,] = c(t, E, L, P, A)
}
if(E > 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E =0
}
if(E >= 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E =0
}
if(E > 0){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E = 0
}
if(isTRUE(E > 0)== T){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E = 0
}
E
isTRUE(E > 0)== T
E
SIR = function(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF){
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, E, L, P, A)
for(t in 2:TF){
if(isTRUE(E > 0)== T){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E = 0
}
if(L > 0){
Y1 = rpois(1, (d_E*E))
Y2 =  rpois(1, d_L*0.5*L)
Y3 =  rpois(1, m_L*L)
Y = Y1 - Y2 - Y3
Y = min(Y, L)
}else{
L = 0
}
if(P > 0){
V1 = rpois(1, 0.5*L)
V2 = rpois(1, d_P*P)
V3 = rpois(1, m_P*P)
V  =  V1 - V2 -V3
V = min(V, P)
}else{
P = 0
}
if(A > 0){
Z1 = rpois(1, d_P*P)
Z2 = rpois(1, d_A*A)
Z3 = rpois(1, m_A*A)
Z = Z1 - Z2 - Z3
Z = min(Z, A)
}else{
A = 0
}
E = E + X
L = L + Y
P = P + V
A = A + Z
data[t,] = c(t, E, L, P, A)
}
return(data)
}
TF=400
E=10000
L=5000
P=100
A=5000
n_E=63
d_E=1/8
m_E=1/20
K_L=50000
d_L=1/7
m_L=1/20
d_P=1/6
m_P=1/20
m_A=1/20
Chi_V=0.85
d_A=1/7
k=2
omega_V=2.5
omegah=1/3
gamma=1/4
Chi_H=0.6
a = SIR(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF)
a
rm(list = ls())
SIR = function(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF){
data = matrix(nrow=TF, ncol=5)
data[1,] = c(1, E, L, P, A)
for(t in 2:TF){
if(isTRUE(E > 0)){
X1 = rpois(1, (n_E*d_A*A))
X2 = rpois(1, (d_E*E))
X3 = rpois(1, (m_E*E))
X  = X1 - X2 - X3
X = min(X, E)
}else{
E = 0
}
if(L > 0){
Y1 = rpois(1, (d_E*E))
Y2 =  rpois(1, d_L*0.01*L)
Y3 =  rpois(1, m_L*L)
Y = Y1 - Y2 - Y3
Y = min(Y, L)
}else{
L = 0
}
if(P > 0){
V1 = rpois(1, d_L*0.01*L)
V2 = rpois(1, d_P*P)
V3 = rpois(1, m_P*P)
V  =  V1 - V2 -V3
V = min(V, P)
}else{
P = 0
}
if(A > 0){
Z1 = rpois(1, d_P*P)
Z2 = rpois(1, d_A*A)
Z3 = rpois(1, m_A*A)
Z = Z1 - Z2 - Z3
Z = min(Z, A)
}else{
A = 0
}
E = E + X
L = L + Y
P = P + V
A = A + Z
data[t,] = c(t, E, L, P, A)
}
return(data)
}
TF=400
E=10000
L=5000
P=100
A=5000
n_E=63
d_E=1/8
m_E=1/20
K_L=50000
d_L=1/7
m_L=1/20
d_P=1/6
m_P=1/20
m_A=1/30
Chi_V=0.85
d_A=1/7
k=2
omega_V=2.5
omegah=1/3
gamma=1/4
Chi_H=0.6
a = SIR(E, L, P, A, d_E, d_L, d_P, m_E, m_P, m_A, k_L, m_L, TF)
a
